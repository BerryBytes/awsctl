// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/sso/credentials.go

// Package mock_sso is a generated GoMock package.
package mock_sso

import (
	models "awsctl/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAWSCredentialsClient is a mock of AWSCredentialsClient interface.
type MockAWSCredentialsClient struct {
	ctrl     *gomock.Controller
	recorder *MockAWSCredentialsClientMockRecorder
}

// MockAWSCredentialsClientMockRecorder is the mock recorder for MockAWSCredentialsClient.
type MockAWSCredentialsClientMockRecorder struct {
	mock *MockAWSCredentialsClient
}

// NewMockAWSCredentialsClient creates a new mock instance.
func NewMockAWSCredentialsClient(ctrl *gomock.Controller) *MockAWSCredentialsClient {
	mock := &MockAWSCredentialsClient{ctrl: ctrl}
	mock.recorder = &MockAWSCredentialsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSCredentialsClient) EXPECT() *MockAWSCredentialsClientMockRecorder {
	return m.recorder
}

// AwsSTSGetCallerIdentity mocks base method.
func (m *MockAWSCredentialsClient) AwsSTSGetCallerIdentity(profile string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AwsSTSGetCallerIdentity", profile)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AwsSTSGetCallerIdentity indicates an expected call of AwsSTSGetCallerIdentity.
func (mr *MockAWSCredentialsClientMockRecorder) AwsSTSGetCallerIdentity(profile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AwsSTSGetCallerIdentity", reflect.TypeOf((*MockAWSCredentialsClient)(nil).AwsSTSGetCallerIdentity), profile)
}

// GetRoleCredentials mocks base method.
func (m *MockAWSCredentialsClient) GetRoleCredentials(accessToken, roleName, accountID string) (*models.AWSCredentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoleCredentials", accessToken, roleName, accountID)
	ret0, _ := ret[0].(*models.AWSCredentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoleCredentials indicates an expected call of GetRoleCredentials.
func (mr *MockAWSCredentialsClientMockRecorder) GetRoleCredentials(accessToken, roleName, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoleCredentials", reflect.TypeOf((*MockAWSCredentialsClient)(nil).GetRoleCredentials), accessToken, roleName, accountID)
}

// IsCallerIdentityValid mocks base method.
func (m *MockAWSCredentialsClient) IsCallerIdentityValid(profile string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsCallerIdentityValid", profile)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsCallerIdentityValid indicates an expected call of IsCallerIdentityValid.
func (mr *MockAWSCredentialsClientMockRecorder) IsCallerIdentityValid(profile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsCallerIdentityValid", reflect.TypeOf((*MockAWSCredentialsClient)(nil).IsCallerIdentityValid), profile)
}

// SaveAWSCredentials mocks base method.
func (m *MockAWSCredentialsClient) SaveAWSCredentials(profile string, creds *models.AWSCredentials) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAWSCredentials", profile, creds)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveAWSCredentials indicates an expected call of SaveAWSCredentials.
func (mr *MockAWSCredentialsClientMockRecorder) SaveAWSCredentials(profile, creds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAWSCredentials", reflect.TypeOf((*MockAWSCredentialsClient)(nil).SaveAWSCredentials), profile, creds)
}
