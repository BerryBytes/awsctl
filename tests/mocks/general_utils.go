// Code generated by MockGen. DO NOT EDIT.
// Source: ./utils/general/general.go

// Package mock_generalutils is a generated GoMock package.
package mock_sso

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGeneralUtilsInterface is a mock of GeneralUtilsInterface interface.
type MockGeneralUtilsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGeneralUtilsInterfaceMockRecorder
}

// MockGeneralUtilsInterfaceMockRecorder is the mock recorder for MockGeneralUtilsInterface.
type MockGeneralUtilsInterfaceMockRecorder struct {
	mock *MockGeneralUtilsInterface
}

// NewMockGeneralUtilsInterface creates a new mock instance.
func NewMockGeneralUtilsInterface(ctrl *gomock.Controller) *MockGeneralUtilsInterface {
	mock := &MockGeneralUtilsInterface{ctrl: ctrl}
	mock.recorder = &MockGeneralUtilsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeneralUtilsInterface) EXPECT() *MockGeneralUtilsInterfaceMockRecorder {
	return m.recorder
}

// CheckAWSCLI mocks base method.
func (m *MockGeneralUtilsInterface) CheckAWSCLI() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAWSCLI")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckAWSCLI indicates an expected call of CheckAWSCLI.
func (mr *MockGeneralUtilsInterfaceMockRecorder) CheckAWSCLI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAWSCLI", reflect.TypeOf((*MockGeneralUtilsInterface)(nil).CheckAWSCLI))
}

// HandleSignals mocks base method.
func (m *MockGeneralUtilsInterface) HandleSignals() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleSignals")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// HandleSignals indicates an expected call of HandleSignals.
func (mr *MockGeneralUtilsInterfaceMockRecorder) HandleSignals() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleSignals", reflect.TypeOf((*MockGeneralUtilsInterface)(nil).HandleSignals))
}

// PrintCurrentRole mocks base method.
func (m *MockGeneralUtilsInterface) PrintCurrentRole(profile, accountID, accountName, roleName, roleARN, expiration string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PrintCurrentRole", profile, accountID, accountName, roleName, roleARN, expiration)
}

// PrintCurrentRole indicates an expected call of PrintCurrentRole.
func (mr *MockGeneralUtilsInterfaceMockRecorder) PrintCurrentRole(profile, accountID, accountName, roleName, roleARN, expiration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrintCurrentRole", reflect.TypeOf((*MockGeneralUtilsInterface)(nil).PrintCurrentRole), profile, accountID, accountName, roleName, roleARN, expiration)
}
