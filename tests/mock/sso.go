// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/sso/sso.go

// Package mock_sso is a generated GoMock package.
package mock_awsctl

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSSOClient is a mock of SSOClient interface.
type MockSSOClient struct {
	ctrl     *gomock.Controller
	recorder *MockSSOClientMockRecorder
}

// MockSSOClientMockRecorder is the mock recorder for MockSSOClient.
type MockSSOClientMockRecorder struct {
	mock *MockSSOClient
}

// NewMockSSOClient creates a new mock instance.
func NewMockSSOClient(ctrl *gomock.Controller) *MockSSOClient {
	mock := &MockSSOClient{ctrl: ctrl}
	mock.recorder = &MockSSOClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSSOClient) EXPECT() *MockSSOClientMockRecorder {
	return m.recorder
}

// InitSSO mocks base method.
func (m *MockSSOClient) InitSSO(refresh, noBrowser bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitSSO", refresh, noBrowser)
	ret0, _ := ret[0].(error)
	return ret0
}

// InitSSO indicates an expected call of InitSSO.
func (mr *MockSSOClientMockRecorder) InitSSO(refresh, noBrowser interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitSSO", reflect.TypeOf((*MockSSOClient)(nil).InitSSO), refresh, noBrowser)
}

// SetupSSO mocks base method.
func (m *MockSSOClient) SetupSSO() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetupSSO")
	ret0, _ := ret[0].(error)
	return ret0
}

// SetupSSO indicates an expected call of SetupSSO.
func (mr *MockSSOClientMockRecorder) SetupSSO() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetupSSO", reflect.TypeOf((*MockSSOClient)(nil).SetupSSO))
}
