// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/bastion/bastion_interface.go

// Package mock_awsctl is a generated GoMock package.
package mock_awsctl

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBastionServiceInterface is a mock of BastionServiceInterface interface.
type MockBastionServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBastionServiceInterfaceMockRecorder
}

// MockBastionServiceInterfaceMockRecorder is the mock recorder for MockBastionServiceInterface.
type MockBastionServiceInterfaceMockRecorder struct {
	mock *MockBastionServiceInterface
}

// NewMockBastionServiceInterface creates a new mock instance.
func NewMockBastionServiceInterface(ctrl *gomock.Controller) *MockBastionServiceInterface {
	mock := &MockBastionServiceInterface{ctrl: ctrl}
	mock.recorder = &MockBastionServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBastionServiceInterface) EXPECT() *MockBastionServiceInterfaceMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockBastionServiceInterface) Run(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockBastionServiceInterfaceMockRecorder) Run(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockBastionServiceInterface)(nil).Run), ctx)
}
